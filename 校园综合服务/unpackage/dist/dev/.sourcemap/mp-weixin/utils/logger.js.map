{"version":3,"file":"logger.js","sources":["utils/logger.js"],"sourcesContent":["// utils/logger.js\n\n/**\n * 记录错误日志\n * @param {Object} err 错误对象\n */\nexport const logError = (err) => {\n  try {\n    console.error('❌ 错误日志:', err)\n\n    const logs = uni.getStorageSync('logs') || []\n\n    logs.unshift({\n      time: new Date().toISOString(),\n      error: formatError(err)\n    })\n\n    // 最多保留最近50条\n    if (logs.length > 50) {\n      logs.pop()\n    }\n\n    uni.setStorageSync('logs', logs)\n\n    // TODO: 后续可以加上错误上报服务器（如 Sentry）\n  } catch (e) {\n    console.error('日志记录失败:', e)\n  }\n}\n\n/**\n * 简单格式化错误信息\n * @param {any} err\n * @returns {Object}\n */\nconst formatError = (err) => {\n  if (typeof err === 'string') {\n    return { message: err }\n  }\n  if (typeof err === 'object') {\n    return {\n      message: err.message || '未知错误',\n      code: err.code || '',\n      stack: err.stack || '',\n      status: err.statusCode || '',\n    }\n  }\n  return { message: '未知错误类型' }\n}\n"],"names":["uni"],"mappings":";;AAMY,MAAC,WAAW,CAAC,QAAQ;AAC/B,MAAI;AACFA,kBAAAA,6CAAc,WAAW,GAAG;AAE5B,UAAM,OAAOA,cAAG,MAAC,eAAe,MAAM,KAAK,CAAE;AAE7C,SAAK,QAAQ;AAAA,MACX,OAAM,oBAAI,KAAM,GAAC,YAAa;AAAA,MAC9B,OAAO,YAAY,GAAG;AAAA,IAC5B,CAAK;AAGD,QAAI,KAAK,SAAS,IAAI;AACpB,WAAK,IAAK;AAAA,IACX;AAEDA,wBAAI,eAAe,QAAQ,IAAI;AAAA,EAGhC,SAAQ,GAAG;AACVA,kBAAAA,MAAc,MAAA,SAAA,yBAAA,WAAW,CAAC;AAAA,EAC3B;AACH;AAOA,MAAM,cAAc,CAAC,QAAQ;AAC3B,MAAI,OAAO,QAAQ,UAAU;AAC3B,WAAO,EAAE,SAAS,IAAK;AAAA,EACxB;AACD,MAAI,OAAO,QAAQ,UAAU;AAC3B,WAAO;AAAA,MACL,SAAS,IAAI,WAAW;AAAA,MACxB,MAAM,IAAI,QAAQ;AAAA,MAClB,OAAO,IAAI,SAAS;AAAA,MACpB,QAAQ,IAAI,cAAc;AAAA,IAC3B;AAAA,EACF;AACD,SAAO,EAAE,SAAS,SAAU;AAC9B;;"}